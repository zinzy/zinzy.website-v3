@tailwind base;
@tailwind components;
@tailwind utilities;


.font-sans {
  /* @apply tracking-wider; */
}

.font-serif {
  @apply tracking-tight
  /* @apply font-light; */
}



body {
  @apply font-sans text-neutral-950 dark:text-neutral-100;
  font-size: 18px;
}

.prose {
  @apply font-serif;
  font-size: 18px;

}

.container {
  max-width: 500px;
  @apply mx-auto my-20 md:my-28 lg:my-40 p-0;
}

.log li {
  margin: 0;
  padding: 0;
  list-style-type: none;
}

.prose :where(a):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
  @apply underline font-normal dark:text-neutral-300;
}

h2, h3, h4, h5, h6, 
.prose h2, .prose h3, .prose h4, .prose h5, .prose h6 {
  @apply font-sans font-medium dark:text-neutral-100;
}


.prose blockquote {
  @apply border-none p-0 m-0 font-sans;
}

.prose blockquote p {
  @apply text-2xl not-italic p-0 m-0 font-medium;
}

.prose blockquote p {
  @apply font-medium
}

.prose
  :where(blockquote p:first-of-type):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  )::before,
.prose
  :where(blockquote p:first-of-type):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  )::after {
  content: "";
}

.button {
  @apply px-3 py-1 bg-stone-200 dark:bg-white rounded;
}

figure {
  figcaption {
    @apply font-sans;
  }
}

[class*="border"] {
  @apply border-neutral-200 dark:border-neutral-700;
}

time, time a {
  /* @apply text-neutral-600; */
}